import React, { useState } from 'react';
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { useRouter } from 'next/router';

import { useAuth } from '../context/authContext';


// import your components
import { Button } from "@rmwc/button";
import { TextField } from '@rmwc/textfield';
import { Typography } from "@rmwc/typography";
import { Snackbar, SnackbarAction } from '@rmwc/snackbar';


export default function Home() {
  const [email, setEmail] = useState<string|"">("");
  const [password, setPassword] = useState<string|"">("");
  const [error, setError] = useState<string|null>(null);
  const router = useRouter();
  const { authUser, signInWithEmailAndPassword, createUserWithEmailAndPassword } = useAuth();

  const onSubmit = () => {
    setError(null)
    signInWithEmailAndPassword(email, password)
    .then(res => {
      setError(null)
      console.log("Success. The user is created in firebase")
      router.push('/landing');
    })
    .catch(error => {
      setError(error.message)
    });
  };

  function Alert() {
    const [open, setOpen] = React.useState(false);
  
    return (
      <>
        <Snackbar
          open
          message={error}
        />
      </>
    );
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>TO-DO List</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Typography className={styles.textBoxMargin} use="headline4">LOGIN</Typography>
        <TextField className={styles.textBoxMargin} outlined label="Email" onChange={(e:React.ChangeEvent<HTMLInputElement>) => setEmail(e.target.value)}/>
        <TextField className={styles.textBoxMargin} outlined label="Password" type="password" onChange={(e:React.ChangeEvent<HTMLInputElement>) => setPassword(e.target.value)}/>
        <Button label="Login" raised onClick={() => onSubmit()} />
      </main>
      {error && <Snackbar
          open
          message={error}
        />}
      </div>
  )
}
